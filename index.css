.parent {
    display: flex;
    width: 1000px;
    height: 1000px;
    background-color: aqua;
    margin: 50px auto;
    /* flex-direction: column; makes it all in a column again */
    /* flex-direction: row-reverse; makes it all start from the other end */
    /* flex-direction: column-reverse; */
    /* By default justify-content is flex-start. Can flip it by using flex-end. Also try center */
    /* justify-content does everything in horizontal axis */
    justify-content: space-between; 
    /* justify-content: space-around; */
    /* justify-content: space-evenly; */
    /* justify-content: center; */
    /* align items does everything in vertical axis */
    /* align-items: flex-end; */
    align-items:center;
}

.children {
    width: 300px;
    height: 300px;
    background-color: rgb(255,0,242);
    color: white;
    border: 1px solid black;
    /* the children can also be flex boxes */
    /* display: flex;
    justify-content: center;
    align-items: center; */
}

/* Because the parent is display felx, you can specify the order of the children */
/* Another cool property is flex-grow. Change the width and height of the children 100. Then define flex-grow in each of the childs */
/* Flex grow 1 means for each of them means that they will each take equal width to fill the span of the parent. Play around with the flex-grow value and one becomes bigger than the others */
/* .child1{
    order: 1;
    flex-grow: 1;
}

.child2{
    order: 2;
    flex-grow: 5;
}

.child3{
    order: 3;
    flex-grow: 1;
} */